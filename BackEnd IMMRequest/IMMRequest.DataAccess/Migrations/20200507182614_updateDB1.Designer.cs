// <auto-generated />
using System;
using IMMRequest.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IMMRequest.DataAccess.Migrations
{
    [DbContext(typeof(IMMRequestContext))]
    [Migration("20200507182614_updateDB1")]
    partial class updateDB1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IMMRequest.Domain.AdminSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Token")
                        .HasColumnType("int");

                    b.Property<int?>("adminId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("adminId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("IMMRequest.Domain.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("IMMRequest.Domain.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("IMMRequest.Domain.CampoAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoDeTemaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId");

                    b.HasIndex("TipoDeTemaID");

                    b.ToTable("CampoAdicional");

                    b.HasDiscriminator<string>("Discriminator").HasValue("CampoAdicional");
                });

            modelBuilder.Entity("IMMRequest.Domain.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoID")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("TemaId");

                    b.HasIndex("TipoID");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("IMMRequest.Domain.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("IMMRequest.Domain.TipoDeTema", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("TemaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TemaId");

                    b.ToTable("TipoDeTema");
                });

            modelBuilder.Entity("IMMRequest.Domain.CampoAdicionalEntero", b =>
                {
                    b.HasBaseType("IMMRequest.Domain.CampoAdicional");

                    b.HasDiscriminator().HasValue("CampoAdicionalEntero");
                });

            modelBuilder.Entity("IMMRequest.Domain.CampoAdicionalFecha", b =>
                {
                    b.HasBaseType("IMMRequest.Domain.CampoAdicional");

                    b.HasDiscriminator().HasValue("CampoAdicionalFecha");
                });

            modelBuilder.Entity("IMMRequest.Domain.CampoAicionalTexto", b =>
                {
                    b.HasBaseType("IMMRequest.Domain.CampoAdicional");

                    b.HasDiscriminator().HasValue("CampoAicionalTexto");
                });

            modelBuilder.Entity("IMMRequest.Domain.AdminSession", b =>
                {
                    b.HasOne("IMMRequest.Domain.Administrador", "admin")
                        .WithMany()
                        .HasForeignKey("adminId");
                });

            modelBuilder.Entity("IMMRequest.Domain.CampoAdicional", b =>
                {
                    b.HasOne("IMMRequest.Domain.Solicitud", null)
                        .WithMany("CamposAdicionales")
                        .HasForeignKey("SolicitudId");

                    b.HasOne("IMMRequest.Domain.TipoDeTema", null)
                        .WithMany("Campos")
                        .HasForeignKey("TipoDeTemaID");
                });

            modelBuilder.Entity("IMMRequest.Domain.Solicitud", b =>
                {
                    b.HasOne("IMMRequest.Domain.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("IMMRequest.Domain.Tema", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaId");

                    b.HasOne("IMMRequest.Domain.TipoDeTema", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoID");
                });

            modelBuilder.Entity("IMMRequest.Domain.Tema", b =>
                {
                    b.HasOne("IMMRequest.Domain.Area", null)
                        .WithMany("Temas")
                        .HasForeignKey("AreaId");
                });

            modelBuilder.Entity("IMMRequest.Domain.TipoDeTema", b =>
                {
                    b.HasOne("IMMRequest.Domain.Tema", null)
                        .WithMany("Tipos")
                        .HasForeignKey("TemaId");
                });
#pragma warning restore 612, 618
        }
    }
}
